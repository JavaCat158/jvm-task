public class Main {
        public static void main(String[] args) { // Сначала класс JvmComprehension загружается классовым загрузчиком (ClassLoader). Статический метод main идентифицируется как точка входа в программу.

            int i = 1;                      // 1 Здесь создается примитивный тип int i, инициализированный значением 1. Это происходит на стеке в рамках текущего фрейма стека (фрейма метода main).

            Object o = new Object();        // 2 Создается новый объект Object в куче (heap), а ссылка на этот объект сохраняется в стеке памяти вместе с переменной i. Здесь класс <Object> также загружается ClassLoader'ом (если еще не был загружен).

            Integer ii = 2;                 // 3 Создается новый объект типа Integer, как обертка для значения 2, в куче, а ссылка на этот объект сохраняется в стеке памяти в том же стековом фрейме, что и o и i. Здесь ClassLoader также загружает класс <Integer>, если он еще не был загружен.

            printAll(o, i, ii);             // 4 Вызов метода printAll, на стеке создается новый фрейм стека для этого метода. Ссылки на объект o и объект ii, а также значение примитива i передаются в этот фрейм.
                                            // После завершения метода ссылка uselessvar будет уничтожена сборщиком муссора, а так же это коссается строк созданных при конкатенации.

            System.out.println("finished"); // 7 Печатает строку "finished" в консоли. Строка "finished" является объектом, который хранится в пуле строк на куче.
        }

        private static void printAll(Object o, int i, Integer ii) {
            Integer uselessVar = 700;                   // 5 Создается новый объект Integer в куче, а ссылка на него запоминается в текущем стековом фрейме метода printAll

            System.out.println(o.toString() + i + ii);  // 6 Вызывается метод println класса System.out, который выводит в консоль результат сложения строкового представления объекта o, значения переменной i и значения объекта ii. Для этих операций создаются временные объекты String в куче и новые стековые фреймы для выполнения методов.
        }
    }
